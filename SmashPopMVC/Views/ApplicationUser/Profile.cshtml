@using Microsoft.AspNetCore.Identity;
@using SmashPopMVC.Models.ApplicationUser
@using SmashPopMVC.Models.Comment
@using SmashPopMVC.Models.Vote

@model SmashPopMVC.Models.ApplicationUser.ProfileIndexModel

<environment include="Development">
    <link rel="stylesheet" href="~/css/ApplicationUser/profile.css" />
</environment>

<div class="container">
    <div id="Profile" class="row">
        <div id="ProfileData" class="col-md-6">
            <h2 id="ProfileUserName">@Model.Name</h2>
            <br />
            <div id="ProfileImages">
                <div id="Main" class="@("col-6 card" + ((Model.ID == Model.CurrentUserID) ? " modal-link updatable" : ""))">
                    <h6 class="card-title">Main</h6>
                    <img title="@Model.Main.Name"
                         class="card-img-top character @Model.Main.ImageName"
                         data-id="@Model.Main.ID"
                         alt="...">
                </div>
                <div id="Alt" class="@("col-6 card " + ((Model.ID == Model.CurrentUserID) ? "modal-link updatable" : ""))">
                    <h6 class="card-title">Alt</h6>
                    <img title="@Model.Alt.Name"
                         class="@Model.Main.ID card-img-top character @Model.Alt.ImageName"
                         data-id="@Model.Alt.ID"
                         alt="...">
                </div>
            </div>
            @Html.Partial("_UserUpdatePartial", Model.UpdateViewModel)
            <div id="JoinDate">
                <h4>User since: @Model.Joined</h4>
            </div>
            @if (User.Identity.IsAuthenticated && Model.ID != Model.CurrentUserID && !Model.CurrentUserIsFriends)
            {
                @Html.Partial("../Friend/_AddFriendPartial", new AddFriendViewModel { UserID = Model.CurrentUserID, FriendID = Model.ID });
            }
        </div>
        <div id="RecentVotes" class="col-md-6 container">
            @if (Model.Votes.NewVoteModel != null)
            {
                @Html.ActionLink("Vote now!", "New", "Vote", Model.Votes.NewVoteModel)
            }
            <a asp-controller="Vote" asp-action="Results" asp-route-id="@Model.ID" method="post"><h4>Vote History:</h4></a>
            @if (Model.Votes.Results.Any())
            {
                @Html.Partial("../Vote/_voteListingPartial", Model.Votes)
            }
        </div>
    </div>
    <div id="ProfileSocial">
        <div id="ProfileComments" class="col-md-8 pull-left">
            @Html.Partial("../Comment/_ProfileCommentsPartial", Model.Comments)
        </div>
        <div id="ProfileFriends" class="col-md-4 pull-right">
            <p>Friends:</p>
            <div class="row">
                @foreach (var friend in Model.Friends.ApprovedFriends)
                {
                    <div class="col-6 card flex-item" title="@friend.FriendData.MainName">
                        <a asp-controller="ApplicationUser" asp-action="Profile" asp-route-id="@friend.FriendData.ID"><h4 class="card-title">@friend.FriendData.Name</h4></a>
                        <img class="card-img-top character @friend.FriendData.MainImage" alt="...">
                    </div>
                }
            </div>
            @if (User.Identity.IsAuthenticated && Model.ID == Model.CurrentUserID)
            {
                <p>Accept?</p>
                <div class="row">
                    @foreach (var friend in Model.Friends.FriendRequests)
                    {
                        <p>@friend.FriendData.Name</p>
                        @Html.Partial("../Friend/_AcceptFriendPartial", new AcceptFriendViewModel { RequestID = friend.RequestID });
                    }
                </div>
            }
        </div>
    </div>
</div>