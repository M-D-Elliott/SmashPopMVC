@model SmashPopMVC.Models.Comment.CommentDataModel

<div class="comment">
    <p class="comment-content">@Model.Content</p>
    <div class="comment-links">
        <div class="comment-poster">
            by <a asp-controller="ApplicationUser" asp-action="Profile" asp-route-id="@Model.PosterID">@Model.PosterName</a>
        </div>
        <span>|</span>
        <div class="comment-date">
            @Model.Date
        </div>
        <span>|</span>
        <div class="comment-time">
            @Model.Time
        </div>
        <br />
        @if (Model.NewCommentModel != null)
        {
            @Html.Partial("../Comment/_NewPartial", Model.NewCommentModel)
            <span>|</span>
        }
        @if (Model.CurrentUserID == Model.PosterID && !Model.Deleted)
        {
            <form asp-controller="Comment" asp-action="Update" class="EditCommentForm">
                <textarea placeholder="Content..." asp-for="@Model.Content" class="content-input" style="display: none;"></textarea>
                <input type="hidden" asp-for="@Model.ID" class="ID" value="@Model.ID" />
                <input type="hidden" asp-for="@Model.MaxDepth" class="Depth" value="@Model.MaxDepth" />
                <button class="comment-edit" onclick="return false;">Edit</button>
            </form>
            <span>|</span>
            <form asp-controller="Comment" asp-action="Delete" class="DeleteCommentForm">
                <input type="hidden" asp-for="@Model.ID" class="ID" value="@Model.ID" />
                <input type="hidden" asp-for="@Model.MaxDepth" class="Depth" value="@Model.MaxDepth" />
                <button class="comment-delete" onclcik="return false;">Delete</button>
            </form>
        }
    </div>
    <div class="replies">
        @if (Model.Replies != null)
        {
            @foreach (var reply in Model.Replies)
            {
                @Html.Partial("../Comment/Edit", reply)
            }
        }
    </div>
</div>